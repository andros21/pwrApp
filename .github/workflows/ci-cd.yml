---
name: ci/cd pwrapp

"on":
  workflow_dispatch:
  push:
    branches:
      - flyio
    paths-ignore:
      - LICENSE
      - README.md
      - fly.toml
      - .github/workflows/ci-cd.yml
      - .github/workflows/digesta.yml
      - .github/dependabot.yml
      - test/

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_IMAGE: cgr.dev/chainguard/python

jobs:
  build:
    name: build pwrapp
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: lowercase image name
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "${GITHUB_ENV}"
      - name: checkout project
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - name: get base image
        id: base
        run: |
          set -x
          DIGEST="$(awk -F '@' '/3.10@/ {print $2}' Dockerfile)"
          echo "Base image: ${BASE_IMAGE}:3.10@${DIGEST}"
          echo "image=${BASE_IMAGE}:3.10@${DIGEST}" >> "$GITHUB_OUTPUT"
      - name: setup python
        uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0
        with:
          python-version: '3.9'
      - name: install poetry
        uses: snok/install-poetry@d45b6d76012debf457ab49dffc7fb7b2efe8071d
        with:
          virtualenvs-create: false
      - name: export requirements.txt
        run: |
          set -x
          sed -i '20,24d' pyproject.toml
          poetry lock --no-update
          poetry export -o requirements.txt
      - name: install cosign
        uses: sigstore/cosign-installer@d13028333d784fcc802b67ec924bcebe75aa0a5f
      - name: verify python apko image
        run: |
          cosign verify \
            --certificate-identity \
            'https://github.com/chainguard-images/images/.github/workflows/release.yaml@refs/heads/main' \
            --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' \
            "${{ steps.base.outputs.image }}" | jq .
      - name: docker buildx
        id: buildx
        uses: docker/setup-buildx-action@16c0bc4a6e6ada2cfd8afd41d22d95379cf7c32a
      - name: login ghcr.io
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker metadata
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: build pwrapp (devel)
        id: docker
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel
          labels: ${{ steps.meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          sbom: true
          provenance: true
      # smoke test for pwrapp read `tesh.sh` header for more info
      - name: smoke test
        run: ./test/test.sh
        env:
          PWRAPP_DEVEL: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.docker.outputs.digest }}"
      - name: cosign pwrapp
        run: |
          cosign sign -y "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.docker.outputs.digest }}"
      - name: install crane
        uses: imjasonh/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c
      - name: tag pwrapp (latest)
        run: |
          crane tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel" latest
  deploy:
    name: flyio deploy
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    environment:
      name: flyio
      url: https://pwrapp.fly.dev
    steps:
      - name: lowercase image name
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "${GITHUB_ENV}"
      - name: checkout project
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - name: install cosign
        uses: sigstore/cosign-installer@d13028333d784fcc802b67ec924bcebe75aa0a5f
      - name: verify pwrapp image
        run: |
          cosign verify \
             --certificate-identity \
             'https://github.com/andros21/pwrApp/.github/workflows/ci-cd.yml@refs/heads/flyio' \
             --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' \
             "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" | jq .
      - name: flyio setup
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: flyio deploy
        run: |
          flyctl deploy --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
