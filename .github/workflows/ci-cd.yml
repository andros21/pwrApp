---
name: ci/cd pwrapp

"on":
  workflow_dispatch:
  push:
    branches:
      - flyio
    paths-ignore:
      - LICENSE
      - README.md
      - fly.toml
      - .github/workflows/ci-cd.yml
      - .github/workflows/digesta.yml
      - .github/dependabot.yml
      - test/

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: build pwrapp
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.docker.outputs.digest }}
    steps:
      - name: lowercase image name
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "${GITHUB_ENV}"
      - name: checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: install cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a
      - name: verify base images
        run: |
          cosign dockerfile verify \
            --certificate-identity \
            'https://github.com/chainguard-images/images/.github/workflows/release.yaml@refs/heads/main' \
            --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' \
            Dockerfile | jq .
      - name: docker buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2
      - name: login ghcr.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: build pwrapp (devel)
        id: docker
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel
          labels: ${{ steps.meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          sbom: true
          provenance: true
      # smoke test for pwrapp read `tesh.sh` header for more info
      - name: smoke test
        run: ./test/test.sh
        env:
          PWRAPP_DEVEL: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.docker.outputs.digest }}"
  cosign:
    name: cosign pwrapp
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    needs: build
    steps:
      - name: lowercase image name
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "${GITHUB_ENV}"
      - name: install cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a
      - name: login ghcr.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: cosign pwrapp
        run: |
          cosign sign -y "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest }}"
      - name: install crane
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e
      - name: tag pwrapp (latest)
        run: |
          crane tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel" latest
  deploy:
    name: flyio deploy
    runs-on: ubuntu-latest
    needs: cosign
    permissions:
      contents: read
    environment:
      name: flyio
      url: https://pwrapp.fly.dev
    steps:
      - name: lowercase image name
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "${GITHUB_ENV}"
      - name: checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: install cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a
      - name: verify pwrapp image
        run: |
          cosign verify \
             --certificate-identity \
             'https://github.com/andros21/pwrApp/.github/workflows/ci-cd.yml@refs/heads/flyio' \
             --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' \
             "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" | jq .
      - name: flyio setup
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: flyio deploy
        run: |
          flyctl deploy --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
